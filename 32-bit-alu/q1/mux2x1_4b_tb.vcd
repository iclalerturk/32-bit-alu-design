$date
	Thu Mar 28 21:21:32 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux2x1_4b_tb $end
$var wire 4 ! out [3:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 1 $ select $end
$scope module mux1 $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 1 $ select $end
$var wire 4 ' out [3:0] $end
$scope module m1 $end
$var wire 1 ( a $end
$var wire 1 ) and_1 $end
$var wire 1 * and_2 $end
$var wire 1 + b $end
$var wire 1 , out $end
$var wire 1 $ select $end
$var wire 1 - select_not $end
$upscope $end
$scope module m2 $end
$var wire 1 . a $end
$var wire 1 / and_1 $end
$var wire 1 0 and_2 $end
$var wire 1 1 b $end
$var wire 1 2 out $end
$var wire 1 $ select $end
$var wire 1 3 select_not $end
$upscope $end
$scope module m3 $end
$var wire 1 4 a $end
$var wire 1 5 and_1 $end
$var wire 1 6 and_2 $end
$var wire 1 7 b $end
$var wire 1 8 out $end
$var wire 1 $ select $end
$var wire 1 9 select_not $end
$upscope $end
$scope module m4 $end
$var wire 1 : a $end
$var wire 1 ; and_1 $end
$var wire 1 < and_2 $end
$var wire 1 = b $end
$var wire 1 > out $end
$var wire 1 $ select $end
$var wire 1 ? select_not $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1?
0>
0=
0<
0;
0:
19
18
17
16
05
14
13
02
01
00
0/
0.
1-
0,
0+
0*
0)
1(
b10 '
b10 &
b1010 %
0$
b10 #
b1010 "
b10 !
$end
#1
1>
08
1;
b1 !
b1 '
0,
06
1+
07
0(
04
1:
0-
0)
03
09
05
0?
b1000 #
b1000 &
b1 "
b1 %
1$
#2
12
18
b110 !
b110 '
0>
1/
15
0;
0+
11
17
1.
14
0:
b110 #
b110 &
b110 "
b110 %
#3
