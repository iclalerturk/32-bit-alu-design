$date
	Tue Apr 02 18:12:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder32bit_tb $end
$var wire 32 ! sum [31:0] $end
$var wire 1 " cout $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 1 % cin $end
$scope module add1 $end
$var wire 32 & a [31:0] $end
$var wire 32 ' b [31:0] $end
$var wire 1 % cin $end
$var wire 32 ( sum [31:0] $end
$var wire 1 " cout $end
$var wire 8 ) carry [7:0] $end
$scope module ad1 $end
$var wire 4 * a [3:0] $end
$var wire 4 + b [3:0] $end
$var wire 1 % cin $end
$var wire 4 , sum [3:0] $end
$var wire 1 - cout $end
$var wire 1 . carry3 $end
$var wire 1 / carry2 $end
$var wire 1 0 carry1 $end
$scope module ad1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 % cin $end
$var wire 1 0 cout $end
$var wire 1 3 sum_half $end
$var wire 1 4 sum $end
$var wire 1 5 carry_half_2 $end
$var wire 1 6 carry_half $end
$scope module ha1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 6 carry $end
$var wire 1 3 sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 3 a $end
$var wire 1 % b $end
$var wire 1 5 carry $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 0 cin $end
$var wire 1 / cout $end
$var wire 1 9 sum_half $end
$var wire 1 : sum $end
$var wire 1 ; carry_half_2 $end
$var wire 1 < carry_half $end
$scope module ha1 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 < carry $end
$var wire 1 9 sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 9 a $end
$var wire 1 0 b $end
$var wire 1 ; carry $end
$var wire 1 : sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 / cin $end
$var wire 1 . cout $end
$var wire 1 ? sum_half $end
$var wire 1 @ sum $end
$var wire 1 A carry_half_2 $end
$var wire 1 B carry_half $end
$scope module ha1 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 B carry $end
$var wire 1 ? sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 ? a $end
$var wire 1 / b $end
$var wire 1 A carry $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 . cin $end
$var wire 1 - cout $end
$var wire 1 E sum_half $end
$var wire 1 F sum $end
$var wire 1 G carry_half_2 $end
$var wire 1 H carry_half $end
$scope module ha1 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 H carry $end
$var wire 1 E sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 E a $end
$var wire 1 . b $end
$var wire 1 G carry $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 4 I a [3:0] $end
$var wire 4 J b [3:0] $end
$var wire 1 K cin $end
$var wire 4 L sum [3:0] $end
$var wire 1 M cout $end
$var wire 1 N carry3 $end
$var wire 1 O carry2 $end
$var wire 1 P carry1 $end
$scope module ad1 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 K cin $end
$var wire 1 P cout $end
$var wire 1 S sum_half $end
$var wire 1 T sum $end
$var wire 1 U carry_half_2 $end
$var wire 1 V carry_half $end
$scope module ha1 $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 V carry $end
$var wire 1 S sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 S a $end
$var wire 1 K b $end
$var wire 1 U carry $end
$var wire 1 T sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 P cin $end
$var wire 1 O cout $end
$var wire 1 Y sum_half $end
$var wire 1 Z sum $end
$var wire 1 [ carry_half_2 $end
$var wire 1 \ carry_half $end
$scope module ha1 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 \ carry $end
$var wire 1 Y sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 Y a $end
$var wire 1 P b $end
$var wire 1 [ carry $end
$var wire 1 Z sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 O cin $end
$var wire 1 N cout $end
$var wire 1 _ sum_half $end
$var wire 1 ` sum $end
$var wire 1 a carry_half_2 $end
$var wire 1 b carry_half $end
$scope module ha1 $end
$var wire 1 ] a $end
$var wire 1 ^ b $end
$var wire 1 b carry $end
$var wire 1 _ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 _ a $end
$var wire 1 O b $end
$var wire 1 a carry $end
$var wire 1 ` sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 N cin $end
$var wire 1 M cout $end
$var wire 1 e sum_half $end
$var wire 1 f sum $end
$var wire 1 g carry_half_2 $end
$var wire 1 h carry_half $end
$scope module ha1 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 h carry $end
$var wire 1 e sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 e a $end
$var wire 1 N b $end
$var wire 1 g carry $end
$var wire 1 f sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 4 i a [3:0] $end
$var wire 4 j b [3:0] $end
$var wire 1 k cin $end
$var wire 4 l sum [3:0] $end
$var wire 1 m cout $end
$var wire 1 n carry3 $end
$var wire 1 o carry2 $end
$var wire 1 p carry1 $end
$scope module ad1 $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 k cin $end
$var wire 1 p cout $end
$var wire 1 s sum_half $end
$var wire 1 t sum $end
$var wire 1 u carry_half_2 $end
$var wire 1 v carry_half $end
$scope module ha1 $end
$var wire 1 q a $end
$var wire 1 r b $end
$var wire 1 v carry $end
$var wire 1 s sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 s a $end
$var wire 1 k b $end
$var wire 1 u carry $end
$var wire 1 t sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 w a $end
$var wire 1 x b $end
$var wire 1 p cin $end
$var wire 1 o cout $end
$var wire 1 y sum_half $end
$var wire 1 z sum $end
$var wire 1 { carry_half_2 $end
$var wire 1 | carry_half $end
$scope module ha1 $end
$var wire 1 w a $end
$var wire 1 x b $end
$var wire 1 | carry $end
$var wire 1 y sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 y a $end
$var wire 1 p b $end
$var wire 1 { carry $end
$var wire 1 z sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 o cin $end
$var wire 1 n cout $end
$var wire 1 !" sum_half $end
$var wire 1 "" sum $end
$var wire 1 #" carry_half_2 $end
$var wire 1 $" carry_half $end
$scope module ha1 $end
$var wire 1 } a $end
$var wire 1 ~ b $end
$var wire 1 $" carry $end
$var wire 1 !" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 !" a $end
$var wire 1 o b $end
$var wire 1 #" carry $end
$var wire 1 "" sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 n cin $end
$var wire 1 m cout $end
$var wire 1 '" sum_half $end
$var wire 1 (" sum $end
$var wire 1 )" carry_half_2 $end
$var wire 1 *" carry_half $end
$scope module ha1 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 *" carry $end
$var wire 1 '" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 '" a $end
$var wire 1 n b $end
$var wire 1 )" carry $end
$var wire 1 (" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 4 +" a [3:0] $end
$var wire 4 ," b [3:0] $end
$var wire 1 -" cin $end
$var wire 4 ." sum [3:0] $end
$var wire 1 /" cout $end
$var wire 1 0" carry3 $end
$var wire 1 1" carry2 $end
$var wire 1 2" carry1 $end
$scope module ad1 $end
$var wire 1 3" a $end
$var wire 1 4" b $end
$var wire 1 -" cin $end
$var wire 1 2" cout $end
$var wire 1 5" sum_half $end
$var wire 1 6" sum $end
$var wire 1 7" carry_half_2 $end
$var wire 1 8" carry_half $end
$scope module ha1 $end
$var wire 1 3" a $end
$var wire 1 4" b $end
$var wire 1 8" carry $end
$var wire 1 5" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 5" a $end
$var wire 1 -" b $end
$var wire 1 7" carry $end
$var wire 1 6" sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 2" cin $end
$var wire 1 1" cout $end
$var wire 1 ;" sum_half $end
$var wire 1 <" sum $end
$var wire 1 =" carry_half_2 $end
$var wire 1 >" carry_half $end
$scope module ha1 $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 >" carry $end
$var wire 1 ;" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 ;" a $end
$var wire 1 2" b $end
$var wire 1 =" carry $end
$var wire 1 <" sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 1" cin $end
$var wire 1 0" cout $end
$var wire 1 A" sum_half $end
$var wire 1 B" sum $end
$var wire 1 C" carry_half_2 $end
$var wire 1 D" carry_half $end
$scope module ha1 $end
$var wire 1 ?" a $end
$var wire 1 @" b $end
$var wire 1 D" carry $end
$var wire 1 A" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 A" a $end
$var wire 1 1" b $end
$var wire 1 C" carry $end
$var wire 1 B" sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 0" cin $end
$var wire 1 /" cout $end
$var wire 1 G" sum_half $end
$var wire 1 H" sum $end
$var wire 1 I" carry_half_2 $end
$var wire 1 J" carry_half $end
$scope module ha1 $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 J" carry $end
$var wire 1 G" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 G" a $end
$var wire 1 0" b $end
$var wire 1 I" carry $end
$var wire 1 H" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad5 $end
$var wire 4 K" a [3:0] $end
$var wire 4 L" b [3:0] $end
$var wire 1 M" cin $end
$var wire 4 N" sum [3:0] $end
$var wire 1 O" cout $end
$var wire 1 P" carry3 $end
$var wire 1 Q" carry2 $end
$var wire 1 R" carry1 $end
$scope module ad1 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 M" cin $end
$var wire 1 R" cout $end
$var wire 1 U" sum_half $end
$var wire 1 V" sum $end
$var wire 1 W" carry_half_2 $end
$var wire 1 X" carry_half $end
$scope module ha1 $end
$var wire 1 S" a $end
$var wire 1 T" b $end
$var wire 1 X" carry $end
$var wire 1 U" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 U" a $end
$var wire 1 M" b $end
$var wire 1 W" carry $end
$var wire 1 V" sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 R" cin $end
$var wire 1 Q" cout $end
$var wire 1 [" sum_half $end
$var wire 1 \" sum $end
$var wire 1 ]" carry_half_2 $end
$var wire 1 ^" carry_half $end
$scope module ha1 $end
$var wire 1 Y" a $end
$var wire 1 Z" b $end
$var wire 1 ^" carry $end
$var wire 1 [" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 [" a $end
$var wire 1 R" b $end
$var wire 1 ]" carry $end
$var wire 1 \" sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 Q" cin $end
$var wire 1 P" cout $end
$var wire 1 a" sum_half $end
$var wire 1 b" sum $end
$var wire 1 c" carry_half_2 $end
$var wire 1 d" carry_half $end
$scope module ha1 $end
$var wire 1 _" a $end
$var wire 1 `" b $end
$var wire 1 d" carry $end
$var wire 1 a" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 a" a $end
$var wire 1 Q" b $end
$var wire 1 c" carry $end
$var wire 1 b" sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 P" cin $end
$var wire 1 O" cout $end
$var wire 1 g" sum_half $end
$var wire 1 h" sum $end
$var wire 1 i" carry_half_2 $end
$var wire 1 j" carry_half $end
$scope module ha1 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 j" carry $end
$var wire 1 g" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 g" a $end
$var wire 1 P" b $end
$var wire 1 i" carry $end
$var wire 1 h" sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad6 $end
$var wire 4 k" a [3:0] $end
$var wire 4 l" b [3:0] $end
$var wire 1 m" cin $end
$var wire 4 n" sum [3:0] $end
$var wire 1 o" cout $end
$var wire 1 p" carry3 $end
$var wire 1 q" carry2 $end
$var wire 1 r" carry1 $end
$scope module ad1 $end
$var wire 1 s" a $end
$var wire 1 t" b $end
$var wire 1 m" cin $end
$var wire 1 r" cout $end
$var wire 1 u" sum_half $end
$var wire 1 v" sum $end
$var wire 1 w" carry_half_2 $end
$var wire 1 x" carry_half $end
$scope module ha1 $end
$var wire 1 s" a $end
$var wire 1 t" b $end
$var wire 1 x" carry $end
$var wire 1 u" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 u" a $end
$var wire 1 m" b $end
$var wire 1 w" carry $end
$var wire 1 v" sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 y" a $end
$var wire 1 z" b $end
$var wire 1 r" cin $end
$var wire 1 q" cout $end
$var wire 1 {" sum_half $end
$var wire 1 |" sum $end
$var wire 1 }" carry_half_2 $end
$var wire 1 ~" carry_half $end
$scope module ha1 $end
$var wire 1 y" a $end
$var wire 1 z" b $end
$var wire 1 ~" carry $end
$var wire 1 {" sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 {" a $end
$var wire 1 r" b $end
$var wire 1 }" carry $end
$var wire 1 |" sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 !# a $end
$var wire 1 "# b $end
$var wire 1 q" cin $end
$var wire 1 p" cout $end
$var wire 1 ## sum_half $end
$var wire 1 $# sum $end
$var wire 1 %# carry_half_2 $end
$var wire 1 &# carry_half $end
$scope module ha1 $end
$var wire 1 !# a $end
$var wire 1 "# b $end
$var wire 1 &# carry $end
$var wire 1 ## sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 ## a $end
$var wire 1 q" b $end
$var wire 1 %# carry $end
$var wire 1 $# sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 '# a $end
$var wire 1 (# b $end
$var wire 1 p" cin $end
$var wire 1 o" cout $end
$var wire 1 )# sum_half $end
$var wire 1 *# sum $end
$var wire 1 +# carry_half_2 $end
$var wire 1 ,# carry_half $end
$scope module ha1 $end
$var wire 1 '# a $end
$var wire 1 (# b $end
$var wire 1 ,# carry $end
$var wire 1 )# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 )# a $end
$var wire 1 p" b $end
$var wire 1 +# carry $end
$var wire 1 *# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad7 $end
$var wire 4 -# a [3:0] $end
$var wire 4 .# b [3:0] $end
$var wire 1 /# cin $end
$var wire 4 0# sum [3:0] $end
$var wire 1 1# cout $end
$var wire 1 2# carry3 $end
$var wire 1 3# carry2 $end
$var wire 1 4# carry1 $end
$scope module ad1 $end
$var wire 1 5# a $end
$var wire 1 6# b $end
$var wire 1 /# cin $end
$var wire 1 4# cout $end
$var wire 1 7# sum_half $end
$var wire 1 8# sum $end
$var wire 1 9# carry_half_2 $end
$var wire 1 :# carry_half $end
$scope module ha1 $end
$var wire 1 5# a $end
$var wire 1 6# b $end
$var wire 1 :# carry $end
$var wire 1 7# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 7# a $end
$var wire 1 /# b $end
$var wire 1 9# carry $end
$var wire 1 8# sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 ;# a $end
$var wire 1 <# b $end
$var wire 1 4# cin $end
$var wire 1 3# cout $end
$var wire 1 =# sum_half $end
$var wire 1 ># sum $end
$var wire 1 ?# carry_half_2 $end
$var wire 1 @# carry_half $end
$scope module ha1 $end
$var wire 1 ;# a $end
$var wire 1 <# b $end
$var wire 1 @# carry $end
$var wire 1 =# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 =# a $end
$var wire 1 4# b $end
$var wire 1 ?# carry $end
$var wire 1 ># sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 A# a $end
$var wire 1 B# b $end
$var wire 1 3# cin $end
$var wire 1 2# cout $end
$var wire 1 C# sum_half $end
$var wire 1 D# sum $end
$var wire 1 E# carry_half_2 $end
$var wire 1 F# carry_half $end
$scope module ha1 $end
$var wire 1 A# a $end
$var wire 1 B# b $end
$var wire 1 F# carry $end
$var wire 1 C# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 C# a $end
$var wire 1 3# b $end
$var wire 1 E# carry $end
$var wire 1 D# sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 G# a $end
$var wire 1 H# b $end
$var wire 1 2# cin $end
$var wire 1 1# cout $end
$var wire 1 I# sum_half $end
$var wire 1 J# sum $end
$var wire 1 K# carry_half_2 $end
$var wire 1 L# carry_half $end
$scope module ha1 $end
$var wire 1 G# a $end
$var wire 1 H# b $end
$var wire 1 L# carry $end
$var wire 1 I# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 I# a $end
$var wire 1 2# b $end
$var wire 1 K# carry $end
$var wire 1 J# sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module ad8 $end
$var wire 4 M# a [3:0] $end
$var wire 4 N# b [3:0] $end
$var wire 1 O# cin $end
$var wire 4 P# sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 Q# carry3 $end
$var wire 1 R# carry2 $end
$var wire 1 S# carry1 $end
$scope module ad1 $end
$var wire 1 T# a $end
$var wire 1 U# b $end
$var wire 1 O# cin $end
$var wire 1 S# cout $end
$var wire 1 V# sum_half $end
$var wire 1 W# sum $end
$var wire 1 X# carry_half_2 $end
$var wire 1 Y# carry_half $end
$scope module ha1 $end
$var wire 1 T# a $end
$var wire 1 U# b $end
$var wire 1 Y# carry $end
$var wire 1 V# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 V# a $end
$var wire 1 O# b $end
$var wire 1 X# carry $end
$var wire 1 W# sum $end
$upscope $end
$upscope $end
$scope module ad2 $end
$var wire 1 Z# a $end
$var wire 1 [# b $end
$var wire 1 S# cin $end
$var wire 1 R# cout $end
$var wire 1 \# sum_half $end
$var wire 1 ]# sum $end
$var wire 1 ^# carry_half_2 $end
$var wire 1 _# carry_half $end
$scope module ha1 $end
$var wire 1 Z# a $end
$var wire 1 [# b $end
$var wire 1 _# carry $end
$var wire 1 \# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 \# a $end
$var wire 1 S# b $end
$var wire 1 ^# carry $end
$var wire 1 ]# sum $end
$upscope $end
$upscope $end
$scope module ad3 $end
$var wire 1 `# a $end
$var wire 1 a# b $end
$var wire 1 R# cin $end
$var wire 1 Q# cout $end
$var wire 1 b# sum_half $end
$var wire 1 c# sum $end
$var wire 1 d# carry_half_2 $end
$var wire 1 e# carry_half $end
$scope module ha1 $end
$var wire 1 `# a $end
$var wire 1 a# b $end
$var wire 1 e# carry $end
$var wire 1 b# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 b# a $end
$var wire 1 R# b $end
$var wire 1 d# carry $end
$var wire 1 c# sum $end
$upscope $end
$upscope $end
$scope module ad4 $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 Q# cin $end
$var wire 1 " cout $end
$var wire 1 h# sum_half $end
$var wire 1 i# sum $end
$var wire 1 j# carry_half_2 $end
$var wire 1 k# carry_half $end
$scope module ha1 $end
$var wire 1 f# a $end
$var wire 1 g# b $end
$var wire 1 k# carry $end
$var wire 1 h# sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 h# a $end
$var wire 1 Q# b $end
$var wire 1 j# carry $end
$var wire 1 i# sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
b0 P#
0O#
b0 N#
b0 M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
02#
01#
b0 0#
0/#
b0 .#
b0 -#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
b0 n"
0m"
b0 l"
b0 k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
b0 N"
0M"
b0 L"
b0 K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
b0 ."
0-"
b0 ,"
b0 +"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
b0 l
0k
b0 j
b0 i
0h
0g
1f
1e
0d
1c
0b
0a
1`
1_
0^
1]
0\
0[
1Z
1Y
0X
1W
0V
0U
1T
1S
0R
1Q
0P
0O
0N
0M
b1111 L
0K
b0 J
b1111 I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
14
13
12
01
00
0/
0.
0-
b1 ,
b1 +
b0 *
bz0000000 )
b11110001 (
b1 '
b11110000 &
0%
b1 $
b11110000 #
0"
b11110001 !
$end
#10
